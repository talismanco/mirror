name: Release
on:
  push:
    branches: [master, develop, alpha]

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-18.04
    if: "!contains(github.event.commits[0].message, '[skip ci]')"
    steps:
      - name: Checkout
        id: setup-1
        uses: actions/checkout@v1

      - name: Install Nix
        id: setup-2
        uses: cachix/install-nix-action@v10
        with:
          skip_adding_nixpkgs_channel: true

      - name: Cachix
        id: setup-3
        uses: cachix/cachix-action@v6
        with:
          name: mirror
          signingKey: "${{ secrets.CACHIX_SIGNING_KEY }}"
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"

      - name: Download Nix Dependenices
        id: setup-4
        run: |
          nix-shell

  build:
    name: Build
    needs: test
    runs-on: ubuntu-18.04
    if: "!contains(github.event.commits[0].message, '[skip ci]')"
    steps:
      - name: Checkout
        id: build-1
        uses: actions/checkout@v1

      - name: Setup Go
        id: build-2
        uses: actions/setup-go@v2
        with:
          go-version: "1.14.4"

      - name: Install Nix
        id: build-3
        uses: cachix/install-nix-action@v10

      - name: Cachix
        id: build-4
        uses: cachix/cachix-action@v6
        with:
          name: mirror
          signingKey: "${{ secrets.CACHIX_SIGNING_KEY }}"
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"

      - name: Setup build environment
        id: build-5
        run: |
          nix-shell --run "make setup-build"

      - name: Cross-compile build
        id: build-6
        run: |
          nix-shell --run "make build-cross"

      - name: Upload build artifacts
        id: build-7
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: ./target/dist/**/*

  release:
    name: Release
    needs: build
    runs-on: ubuntu-18.04
    if: "!contains(github.event.commits[0].message, '[skip ci]')"
    steps:
      - name: Checkout
        id: release-1
        uses: actions/checkout@v1

      - name: Download build artifacts
        id: release-2
        uses: actions/download-artifact@v2
        with:
          name: build
          path: ./target/dist

      - name: Setup Node.js
        id: release-3
        uses: actions/setup-node@v2.1.0
        with:
          node-version: "10.19.0"

      - name: Install Node.js dependencies
        id: release-4
        run: |
          npm ci

      - name: Release
        id: release-5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm run release
